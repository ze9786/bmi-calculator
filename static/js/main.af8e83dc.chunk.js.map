{"version":3,"sources":["logo.svg","components/Home.jsx","components/Header.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["BmiDisplay","props","id","className","alertClass","bmi","label","Home","state","weight","height","handleHeightChange","bind","handleWeightChange","calculateBMI","e","this","setState","target","value","bmiResults","results","getBMIResults","type","onChange","htmlFor","name","Component","Header","toggleNav","isNavOpen","Navbar","dark","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","to","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8e83dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\n\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            weight:'',\n            height:'',\n        }\n        this.handleHeightChange=this.handleHeightChange.bind(this);\n        this.handleWeightChange=this.handleWeightChange.bind(this);\n        this.calculateBMI=this.calculateBMI.bind(this);\n        \n    }\n\n  \n    handleHeightChange(e) {\n        this.setState({\n            height: e.target.value\n        });\n    \n    }\n    handleWeightChange(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    \n    }\n    calculateBMI(){\n        if(this.state.weight && this.state.height)\n        var bmi=this.state.weight/(this.state.height*this.state.height);\n        return bmi;\n    }\n    getBMIResults(bmi){\n        let bmiResults = {\n          label: '',\n          alertClass: '',\n        };\n        \n        if (bmi <= 18.5){\n          bmiResults.label = 'Underweight';\n          bmiResults.alertClass = 'alert-danger';\n        } \n        else if (bmi <= 24.9) {\n          bmiResults.label = 'Normal weight';\n          bmiResults.alertClass = 'alert-success';\n        }\n        else if (bmi <= 29.9){\n          bmiResults.label = 'Overweight';\n          bmiResults.alertClass = 'alert-warning';\n        }\n        else if (bmi >= 30) {\n          bmiResults.label = 'Obesity';\n          bmiResults.alertClass = 'alert-danger';\n        } else {\n          bmiResults.label = 'BMI';\n          bmiResults.alertClass = 'alert-primary';\n        }\n    \n        return bmiResults;\n      }\n\n    render() {\n        let bmi=this.calculateBMI();\n        let results=this.getBMIResults(bmi);\n        return (\n            <div className=\"container\">\n                <h1>BMI Calculator</h1>\n                <div className=\"row row-content\">\n                <div className=\"col-sm-12 offset-1\">\n            <form>\n                <div className=\"row\">\n                <div className=\"form-group col-12 col-sm-6\">\n                <legend>Weight</legend>\n                <div className=\"row\">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" id=\"weight\" type=\"number\" value={ this.state.weight } onChange={ this.handleWeightChange } />\n                    <label className=\"control-label\" htmlFor=\"weight\">kg</label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group col-12 col-sm-6\">\n                <legend>Height</legend>\n                <div className=\"row\">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" id=\"height\" type=\"number\" name=\"height\" value={ this.state.height } onChange={ this.handleHeightChange } />\n                    <label className=\"control-label\" htmlFor=\"height\">m</label>\n                  </div>\n                </div>\n              </div>\n                </div>\n            </form>\n          </div>\n           <div className=\"col-sm-3\"></div> \n          <div className=\"col col-sm-6\">\n            <BmiDisplay bmi={bmi} label={results.label} alertClass={results.alertClass} />\n          </div>\n          <div className=\"col-sm-3\"></div> \n        </div>\n        </div>\n        );\n    }\n    \n}\nfunction BmiDisplay(props){\n  return (\n    <div id=\"bmiContainer\" className={\"bmi-result alert \" + props.alertClass}>\n      <div>{ props.bmi || '--.-' }</div>\n      <div>{ props.label }</div>\n    </div> \n  )\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, NavLink } from 'reactstrap';\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state={\n            isNavOpen:false,\n        }\n    }\n    toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            {/* <NavItem>\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem> */}\n                        </Nav>\n                        \n                    </Collapse>\n                </div>\n            </Navbar>\n        );\n    }\n}\nexport default Header;","import { Component } from \"react\";\nimport Home from \"./Home\";\nimport Header from \"./Header\";\n\nclass Main extends Component{\n    render(){\n        return(\n            <div>\n                <Header/>\n                <Home/>\n            </div>\n        );\n    }\n}\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport {Component} from 'react';\nimport Main from './components/Main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n    render() {\n        return(\n          <div>\n            <Main/>\n          </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}